[1/11] Performing build step for 'bootloader'
[1/1] cd /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/bootloader/esp-idf/esptool_py && /Users/akashjohnsubash/.espressif/python_env/idf5.1_py3.8_env/bin/python /Users/akashjohnsubash/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/bootloader/bootloader.bin
Bootloader binary size 0x6660 bytes. 0x9a0 bytes (9%) free.
[2/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/periodic_schedule.c.obj
[3/11] No install step for 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/application.c.obj
[5/11] Completed 'bootloader'
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable periodic.elf
[9/11] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/periodic.bin
[10/11] cd /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/esp-idf/esptool_py && /Users/akashjohnsubash/.espressif/python_env/idf5.1_py3.8_env/bin/python /Users/akashjohnsubash/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/partition_table/partition-table.bin /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/periodic.bin
periodic.bin binary size 0x2b3b0 bytes. Smallest app partition is 0x100000 bytes. 0xd4c50 bytes (83%) free.
[10/11] cd /Users/akashjohnsubash/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.26.0/bin/cmake -D IDF_PATH=/Users/akashjohnsubash/esp/esp-idf -D "SERIAL_TOOL=/Users/akashjohnsubash/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/Users/akashjohnsubash/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build -P /Users/akashjohnsubash/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/tty.usbserial-0001 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 periodic.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port /dev/tty.usbserial-0001
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c0:49:ef:cd:aa:80
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26208 bytes to 16489...
Writing at 0x00001000... (50 %)
Writing at 0x000075d7... (100 %)
Wrote 26208 bytes (16489 compressed) at 0x00001000 in 0.8 seconds (effective 277.0 kbit/s)...
Hash of data verified.
Compressed 177072 bytes to 94424...
Writing at 0x00010000... (16 %)
Writing at 0x0001b1db... (33 %)
Writing at 0x00020b41... (50 %)
Writing at 0x0002635d... (66 %)
Writing at 0x0002ed53... (83 %)
Writing at 0x00036ab6... (100 %)
Wrote 177072 bytes (94424 compressed) at 0x00010000 in 2.8 seconds (effective 514.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 217.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
