[1/14] Linking C static library esp-idf/spiffs/libspiffs.a
[2/14] Linking C static library esp-idf/fatfs/libfatfs.a
[3/14] Linking C static library esp-idf/protocomm/libprotocomm.a
[4/14] Performing build step for 'bootloader'
[1/1] cd /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/bootloader/esp-idf/esptool_py && /Users/akashjohnsubash/.espressif/python_env/idf5.1_py3.8_env/bin/python /Users/akashjohnsubash/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/bootloader/bootloader.bin
Bootloader binary size 0x6660 bytes. 0x9a0 bytes (9%) free.
[5/14] No install step for 'bootloader'
[6/14] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/periodic_schedule.c.obj
[7/14] Linking C static library esp-idf/esp_local_ctrl/libesp_local_ctrl.a
[8/14] Completed 'bootloader'
[9/14] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[10/14] Linking C static library esp-idf/main/libmain.a
[11/14] Generating ld/sections.ld
[12/14] Linking CXX executable periodic.elf
[13/14] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/periodic.bin
[14/14] cd /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/esp-idf/esptool_py && /Users/akashjohnsubash/.espressif/python_env/idf5.1_py3.8_env/bin/python /Users/akashjohnsubash/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/partition_table/partition-table.bin /Users/akashjohnsubash/Uni/RTOSlab_WS2022/Protocols/Task3/periodic/build/periodic.bin
periodic.bin binary size 0x2b390 bytes. Smallest app partition is 0x100000 bytes. 0xd4c70 bytes (83%) free.
